#include "common.h"
#include "mblur.h"
#include "dof.h"

//////////////////////////////////////////////////////////////////////////////////////////
Texture2D 			s_distort;
#define	EPSDEPTH	0.001
uniform float4 		e_barrier;	// x=norm(.8f), y=depth(.1f), z=clr
uniform float4 		e_weights;	// x=norm, y=depth, z=clr
uniform float4 		e_kernel;	// x=norm, y=depth, z=clr
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel

struct c2_out
{
	float4	Color : SV_Target;
};

c2_out main( v2p_aa_AA I ) : SV_Target
{
	c2_out	res;
	res.Color = float4(0,0,0,0);

	int iSample = 0;
	gbuffer_data gbd = gbuffer_load_data(GLD_P(I.Tex0, I.HPos, iSample));
	
#ifdef 	USE_DISTORT
  	float 	depth 	= gbd.P.z;
	float4 	distort	= s_distort.Sample(smp_nofilter, I.Tex0);
	float2	offset	= (distort.xy-(127.0h/255.0h))*def_distort;  // fix newtral offset
	float2	center	= I.Tex0 + offset;

	gbuffer_data gbdx	= gbuffer_load_data_offset(I.Tex0, center, I.HPos);

	float 	depth_x	= gbdx.P.z;
	if ((depth_x+EPSDEPTH)<depth)	center	= I.Tex0;	// discard new sample
#else // USE_DISTORT
	float2	center 	= I.Tex0;
#endif

	float3	img	= dof(center);
	float4 	bloom = s_bloom.Sample(smp_rtlinear, center);
			img = mblur(center, (gbd).P, img.rgb);

	img = tonemap(img, s_tonemap.Sample(smp_nofilter, float2(0.5f, 0.5f)).x);

#ifdef 	USE_DISTORT
 	float3	blurred	= bloom;
			img		= lerp(img, blurred, distort.z);
#endif

 	res.Color += combine_bloom( img, bloom );
	return res;
}

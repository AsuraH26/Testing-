#include "common.h"
#include "lmodel.h"

#ifdef USE_MINMAX_SM
#define SM_MINMAX
#endif

#if SUN_QUALITY>2
#define ULTRA_SHADOWS_ON
#endif //	SUN_QUALITY>2

#ifdef ULTRA_SHADOWS_ON
#define USE_ULTRA_SHADOWS
#endif

#include "shadow.h"
#include "ScreenSpaceContactShadows.hlsl"

float4 main ( v2p_volume I ) : SV_Target
{
	float2 tcProj = I.tc.xy/I.tc.w;
	
	gbuffer_data gbd = gbuffer_load_data(GLD_P(tcProj, I.hpos, ISAMPLE));
	gbd.P += gbd.N * 0.015f;

	float4 _P = float4(gbd.P_real, gbd.mtl);
	float4 _N = float4(gbd.N, gbd.hemi);

	// ----- light-model
	float	m	= xmaterial;
# ifndef USE_R2_STATIC_SUN
			m 	= _P.w;
# endif
	float4	light	= plight_infinity (m, _P, _N, Ldynamic_dir );

	// ----- shadow
  	float4 	P4 	= float4(gbd.P.xyz, 1.f);
	float4 	PS	= mul( m_shadow, P4 );
	float 	s 	= sunmask( P4 );
	
#if SUN_QUALITY==2 // Hight quality
		s *= shadow_high(PS);
#else
		s *= shadow( PS );
#endif

#ifdef USE_HUD_SHADOWS
	if(gbd.depth < 0.02f) {
		RayTraceContactShadow(tcProj, gbd.P_hud, -Ldynamic_dir, s);
	}
#endif

	return blend( Ldynamic_color * light * s, I.tc );
}


#include "common.h"
#include "sload.h"

f_deffer main( p_flat I )
{
  f_deffer	O;

  // diffuse
  float3 D	= tbase		(I.tcdh);	// IN:  rgb.a

#ifdef	USE_TDETAIL
//	D.rgb	= 2*D.rgb*tex2D	(s_detail, I.tcdbump).rgb;
	D.rgb	= 2*D.rgb * s_detail.Sample( smp_base, I.tcdbump ).rgb;
#endif

	// hemi,sun,material
	float 	ms	= xmaterial		;
#ifdef USE_LM_HEMI
//	float4	lm 	= tex2D( s_hemi, I.lmh );
	float4	lm 	= s_hemi.Sample( smp_rtlinear, I.lmh );
//	float 	h  	= dot( lm.rgb, 1.h/3.h );
	float 	h  	= get_hemi(lm);
# ifdef USE_R2_STATIC_SUN
//		 	ms 	= lm.w			;
			ms 	= get_sun(lm);
# endif
#else
	float 	h	= I.position.w	;
# ifdef USE_R2_STATIC_SUN
		 	ms	= I.tcdh.w		;
# endif
#endif

	float2 motion_vector = (I.cur_hpos.xy / I.cur_hpos.w) - (I.prev_hpos.xy / I.prev_hpos.w);

  // 2. Standart output
	O = pack_gbuffer(normalize((float3)I.N.xyz), ms, h, float4(D.rgb, def_gloss), float4(motion_vector.xy, 0.0f, 0.0f));
  return O;
}
